#Importing relevant libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import statsmodels.api as sm
sns.set()

from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.feature_selection import f_regression

#Importing and Preparing Datasets
player_data = pd.read_csv('players.csv')
champion_data = pd.read_csv('champions.csv')

raw_data = pd.merge(left=player_data,right=champion_data,how='left',left_on='champion',right_on='champion')
data = raw_data.copy()
data_clean = data.dropna(axis=0)

#Visualizing Logistical Trend
fig, (ax1,ax2,ax3) = plt.subplots(1,3,sharey=True, figsize=(15,3))
ax1.scatter(data_clean['teamkills'],data_clean['result'])
ax1.set_title('Teamkills vs. Result')
ax2.scatter(data_clean['dmgtochamps'],data_clean['result'])
ax2.set_title('Damage vs. Result')
ax3.scatter(data_clean['totalgold'],data_clean['result'])
ax3.set_title('Total Gold vs. Result')
plt.show()

#Declaring dependent and independent variables
desired_variables = ['teamkills', 'teamdragkills', 'firedrakes', 'waterdrakes', 'earthdrakes', 'airdrakes', 'elders', 'teamtowerkills', 'teambaronkills', 'dmgtochamps','wpm', 'wardkills', 'goldat15']
y = data_clean['result']
x1 = data_clean[desired_variables]

#Logistical Regression
x = sm.add_constant(x1)
reg_log = sm.Logit(y,x)
results_log = reg_log.fit()
results_log.summary()

#Interpretation Table and Accuracy Calculation
cm_df = pd.DataFrame(results_log.pred_table())
cm_df.columns = ['Predicted Defeat','Predicted Victory']
cm_df = cm_df.rename(index={0:'Actual Defeat',1:'Actual Victory'})
cm_df
cm = np.array(cm_df)
accuracy = ((cm[0,0]+cm[1,1])/cm.sum())*100
accuracy
